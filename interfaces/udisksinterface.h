/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c UdisksInterface -p udisksinterface udisksinterface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef UDISKSINTERFACE_H_1428109384
#define UDISKSINTERFACE_H_1428109384

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.UDisks
 */
class UdisksInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.UDisks"; }

public:
    UdisksInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~UdisksInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QList<QDBusObjectPath> > EnumerateDevices()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("EnumerateDevices"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void DeviceAdded(const QDBusObjectPath &device);
    void DeviceChanged(const QDBusObjectPath &device);
    void DeviceRemoved(const QDBusObjectPath &device);
};

namespace org {
  namespace freedesktop {
    typedef ::UdisksInterface UDisksInterface;
  }
}
#endif
